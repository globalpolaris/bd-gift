{"version":3,"sources":["component/Header.js","component/NightMode.js","component/Countdown.js","component/Dictionary.js","component/Page/Home.js","component/Page/sorry.png","component/Page/How.js","component/Page/Gift.js","component/Page/patient.png","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","toggle","setToggled","className","type","onChange","to","Night","icon","setIcon","sun","faSun","size","moon","faMoon","theme","localStorage","getItem","value","document","documentElement","setAttribute","setItem","Timer","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","useRef","useEffect","CountDown","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current","startTimer","ReqDictionary","word","setWord","counter","setCounter","status","setStatus","fetchedData","setFetchedData","w","url","fetchData","a","fetch","resp","json","data","console","error","onSubmit","e","preventDefault","id","maxLength","placeholder","target","required","toLowerCase","phonetics","text","meanings","definitions","definition","Home","How","number","setNumber","src","sorry","alt","Gift","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.3193e0f2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport App from \"../App\";\r\n\r\nconst Header = () => {\r\n  const [toggle, setToggled] = useState(false);\r\n  return (\r\n    <header>\r\n      <h2 className=\"title\">P R O J E C T - Z</h2>\r\n      <div className=\"options\">\r\n        <div className=\"hamburger\">\r\n          <input\r\n            className=\"chck\"\r\n            type=\"checkbox\"\r\n            onChange={() => setToggled((toggle) => !toggle)}\r\n          />\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n        </div>\r\n        <ul className={toggle ? \"nav slide\" : \"nav\"}>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n          <li>\r\n            <Link to=\"/how-it-started\">How it started</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/your-gift\">\r\n              <span>Your Gift</span>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Night = () => {\r\n  const [icon, setIcon] = useState(true);\r\n  const sun = <FontAwesomeIcon icon={faSun} size=\"1x\" />;\r\n  const moon = <FontAwesomeIcon icon={faMoon} size=\"1x\" />;\r\n  const theme = localStorage.getItem('theme')\r\n  // console.log(theme);\r\n  return (\r\n  \r\n    <div className=\"switch\">\r\n      {/* {theme ? (document.documentElement.setAttribute('data-theme', theme)) : <></>} */}\r\n    <label className=\"switch-icon\">\r\n      <p>{icon}</p>\r\n      <input type=\"checkbox\" value={icon} onChange={() => setIcon(icon => !icon)}/>\r\n\r\n      <span className=\"slider\"  >\r\n        <div className=\"moon-icon\">{icon ? (\r\n        <>  \r\n          {sun}\r\n          {document.documentElement.setAttribute('data-theme', theme)}\r\n          {localStorage.setItem('theme', 'dark')}\r\n        </>\r\n        ) : (\r\n          <>\r\n          {moon}\r\n          {document.documentElement.setAttribute('data-theme', theme)}\r\n          {localStorage.setItem('theme', 'light')}\r\n        </>\r\n        )}</div>\r\n      </span>\r\n    </label>\r\n    {/* {icon ? <em className=\"txt-switch\">Switch to light mode!</em> : <></>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Night;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Timer = () => {\r\n\r\n  const [timerDays, setTimerDays] = useState('00');\r\n  const [timerHours, setTimerHours] = useState('00');\r\n  const [timerMinutes, setTimerMinutes] = useState('00');\r\n  const [timerSeconds, setTimerSeconds] = useState('00');\r\n  let interval = useRef();\r\n\r\n  const startTimer = () => {\r\n    const CountDown = new Date('Jun 01 2021 00:00:00').getTime()\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const distance = CountDown - now;\r\n      const days = Math.floor(distance/(1000*60*60*24));\r\n      const hours = Math.floor((distance % (1000*60*60*24) / (1000*60*60)));\r\n      const minutes = Math.floor((distance % (1000*60*60)) / (1000*60));\r\n      const seconds = Math.floor((distance % (1000*60))/1000);\r\n\r\n      if(distance > 0) {\r\n        setTimerDays(days);\r\n        setTimerHours(hours);\r\n        setTimerMinutes(minutes);\r\n        setTimerSeconds(seconds);\r\n      } else{\r\n        clearInterval(interval.current)\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  useEffect(() => {\r\n    startTimer();\r\n    return () => {\r\n      clearInterval(interval.current)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"clock\">\r\n      <div className=\"cd\">\r\n        <section>\r\n          <h1>\r\n            {timerDays}\r\n          </h1>\r\n          <span><small>Days</small></span>\r\n        </section>\r\n        <section>\r\n          <h1>\r\n            {timerHours}\r\n          </h1>\r\n          <span><small>Hours</small></span>\r\n        </section>\r\n        <section>\r\n          <h1>\r\n            {timerMinutes}\r\n          </h1>\r\n          <span><small>Minutes</small></span>\r\n        </section>\r\n        <section>\r\n          <h1>\r\n            {timerSeconds}\r\n          </h1>\r\n          <span><small>Seconds</small></span>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Timer;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ReqDictionary = () => {\r\n  const [word, setWord] = useState(\"\");\r\n  const [counter, setCounter] = useState(0);\r\n  const [status, setStatus] = useState(true);\r\n  const [fetchedData, setFetchedData] = useState(\"\");\r\n  const w = word;\r\n  const lang = \"en-US\";\r\n  const url =\r\n    \"https://api.dictionaryapi.dev/api/v2/entries/\" + lang + \"/\" + word;\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const resp = await fetch(url);\r\n      if (resp.status != 404) {\r\n        const data = await resp.json();\r\n        setFetchedData(data[0]);\r\n        setStatus(true);\r\n        setCounter(counter + 1);\r\n        // console.log(status);\r\n      } else {\r\n        setStatus(false);\r\n        // console.log(status);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"searchbar\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          id=\"search\"\r\n          maxLength=\"24\"\r\n          placeholder=\"Something...\"\r\n          value={word}\r\n          onChange={(e) => setWord(e.target.value)}\r\n          required\r\n        ></input>\r\n        <input\r\n          className=\"submit-btn\"\r\n          type=\"submit\"\r\n          placeholder=\"Submit\"\r\n          value=\"I'm feeling lucky\"\r\n        ></input>\r\n      </form>\r\n\r\n      <div className=\"dictionary\">\r\n        {w.toLowerCase() === \"zenochka\" ? (\r\n          <div className=\"res\">\r\n          <h2>Zenochka Uma Zivanka</h2>\r\n          <em>/ Zenochka, Enok /</em>\r\n          <p>Born on 1st of July 2002. Graduated from Al-Azhar 3 Kebayoran Baru in 2019. Student of Architecture at Diponogero University, expected to graduate in 2023</p>\r\n        </div>\r\n        ) : (\r\n          <>\r\n            {!status && counter === 0 ? <em>No such word! :(</em> :status && counter > 0 ? (\r\n              <div className=\"res\">\r\n                <h2>{fetchedData.word}</h2>\r\n                <em>/ {fetchedData.phonetics[0].text} /</em>\r\n                <p>{fetchedData.meanings[0].definitions[0].definition}</p>\r\n              </div>\r\n            ) : counter === 0 ? (\r\n              <></>\r\n            ) : (\r\n              <em>No such word! :(</em>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReqDictionary;\r\n","import React from \"react\";\r\nimport Timer from \"../Countdown\";\r\nimport ReqDictionary from \"../Dictionary\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Timer />\r\n      <ReqDictionary />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/sorry.e9b93c9a.png\";","import React, { useState, useEffect } from \"react\";\r\nimport sorry from \"./sorry.png\";\r\n\r\nconst How = () => {\r\n  const [number, setNumber] = useState(\"\");\r\n  const [fetchedData, setFetchedData] = useState(\"\");\r\n  const url = \"http://numbersapi.com/\" + number + \"?json\";\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const resp = await fetch(url);\r\n      if (resp.status !== 404) {\r\n        const data = await resp.json();\r\n        setFetchedData(data);\r\n        //   console.log(fetchedData)\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    return () => {\r\n      setFetchedData({})\r\n    };\r\n  }, [number]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchData();\r\n  };\r\n  return (\r\n    <div className=\"contain\">\r\n      <img\r\n        className=\"sorry-img\"\r\n        src={sorry}\r\n        alt=\"sorry\"\r\n      />\r\n      <div className=\"context\">\r\n        <h1>Hmm..</h1>\r\n        <h3>I think I'm not finished with this page.</h3>\r\n        <h3>In the meantime try typing any number inside the box!</h3>\r\n        <input className=\"number-box\" onChange={(e) => setNumber(e.target.value)}></input>\r\n        <br/><em>{fetchedData.text}</em>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default How;\r\n","import React from \"react\";\r\nimport Timer from \"../Countdown\";\r\nimport Patient from \"./patient.png\";\r\nconst Gift = () => {\r\n  return (\r\n      <div className=\"gift-wrap\">\r\n      {/* <img src={Patient} className=\"img-patient\" /> */}\r\n      {/* <div className=\"timer-gift\"> */}\r\n      <h1>Not yet...<br/></h1>\r\n        <Timer />\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gift;\r\n","export default __webpack_public_path__ + \"static/media/patient.c04a338e.png\";","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./component/Header\";\nimport Night from \"./component/NightMode\";\nimport Home from \"./component/Page/Home\";\nimport How from \"./component/Page/How\";\nimport Gift from \"./component/Page/Gift\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Night />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/how-it-started\" component={How} />\n          <Route path=\"/your-gift\" component={Gift} />\n        </Switch>\n        {/* <Night />\n        <Timer />\n        <TestApi />\n        <ReqDictionary /> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}